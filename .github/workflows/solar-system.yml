name: Solar System Workflow
on:
    workflow_dispatch: 
    push:     
        branches: 
            - main
            - 'feature/*'

env:
  MONGO_URI: 'mongodb://${{ secrets.USERNAME}}:${{ secrets.PASSWORD }}@cluster0.7x6u1mv.mongodb.net/superData'
  MONGO_USERNAME: ${{ secrets.USERNAME }}
  MONGO_PASSWORD: ${{ secrets.PASSWORD}}
jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
             MONGO_URI: 'mongodb://localhost:27017/superData'
             MONGO_USERNAME: non-prod-user
             MONGO_PASSWORD: non-prod-password
        strategy:
          matrix:
            nodjs_version: [18, 20]
            operating_system: [ubuntu-latest]
        runs-on: ${{ matrix.operating_system }}
        steps:
            - name: Checkout Repo
              uses:  actions/checkout@v4

            - name: Setup NodeJs Version - ${{ matrix.nodjs_version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.nodjs_version }}

            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json')}}

            - name: Install Dependencies
              run: npm install

            - name: Unit Testing
              id: nodejs-unit-testing-step
              run: npm test
            - name: Archive Test Result
              if: failure() && (steps.nodejs-unit-testing-step == 'failure' || steps.nodejs-unit-testing-step == 'success')
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Resalt
                path: test-Resalt.xml


    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses:  actions/checkout@v4

            - name: Setup NodeJs Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18

            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json')}}

            - name: Install Dependencies
              run: npm install

            - name: Check code Coverage
              continue-on-error: true
              run: npm Coverage
            - name: Archive Test Result
              uses: actions/upload-artifact@v4
              with:
                name: Code Coverage Result
                path: Covrerage
                retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      permissions: 
        packages: write
      runs-on: ubuntu-latest
      steps:
         - name: Checkout Repo
           uses:  actions/checkout@v4

         - name: Dockerhub Login
           uses: docker/login-action@v3
           with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
         - name: GHCR Login
           uses: docker/login-action@v3
           with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

         - name: Build and push
           uses: docker/build-push-action@v6
           with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

         - name: Docker Image testing
           run: |
             docker images
             docker run --name solar-system-app -d \
             -p 3000:3000 \
             -e MONGO_URI:$MONGO_URI \
             -e MONGO_PASSWORD:$MONGO_PASSWORD \
             -e MONGO_USERNAME:$MONGO_USERNAME \
             ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

             export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
             echo $IP
             echo Testing Iamge URL using wget
             wget -q -O - http://127.0.0.1:3000/live | grep live

         - name: Container Registry push
           uses: docker/build-push-action@v6
           with:
            context: .
            push: true
            tags: |
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              ghcr.io/M0-3del/solar-system:${{ github.sha }}
